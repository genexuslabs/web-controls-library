@import "../common/base";
@import "../common/css-transforms/scss-transforms";

////
/// @group theming-mixins
////

/// Helper mixin to ease styling gx-tab custom elements
/// @param {string} $tabs-position Determine the tab position (top or bottom).
/// @param {string} $selected-tab-caption Class for styling the selected tab caption
/// @param {string} $unselected-tab-caption Class for styling unselected tab caption
@mixin gx-tab(
  $tabs-position: null,
  $selected-tab-caption: null,
  $unselected-tab-caption: null
) {
  @if ($unselected-tab-caption != null) {
    &#{$gx-unselected-tab-caption} {
      @extend #{$unselected-tab-caption} !optional;
    }

    // Highlighted class
    &#{$gx-unselected-tab-caption}#{$gx-highlighted-dot} {
      @extend #{$unselected-tab-caption}#{$gx-highlighted} !optional;
    }
  }

  @if ($selected-tab-caption != null) {
    &#{$gx-selected-tab-caption} {
      @extend #{$selected-tab-caption} !optional;
    }

    // Highlighted class
    &#{$gx-selected-tab-caption}#{$gx-highlighted-dot} {
      @extend #{$selected-tab-caption}#{$gx-highlighted} !optional;
    }
  }

  // - - - - - - - - - - - - - Tabs position - - - - - - - - - - - - -
  // Used to show the captions in the bottom position
  @if $tabs-position == bottom {
    // Implement tabs position
    grid-template-rows: auto minmax(auto, max-content);
    --gx-tabs-position--order: 1;

    // WA to implement elevation when tabs-position = bottom
    &::part(nav-tabs) {
      @include elevation(top);
    }

    &::part(nav-tabs-table-filler) {
      border-block-start-color: var(--tab-strip-separator-color);
      border-block-end-color: #00000000; // transparent
    }

    // Styling for bottom captions
    & > gx-tab-caption {
      border-block-start-color: var(--tab-strip-separator-color);
      border-block-end-color: transparent;
    }
  }
}

@import "../common/_base";
@import "../common/_common-styling-config";
@import "../common/_layout-styling-config";
@import "_loading-rotate-animation";

$animation-duration: 1.5s;
$box-padding: 30px 20px;
$box-background-color: rgba(228, 228, 228, 0.75);
$box-shadow-color: rgba(114, 114, 114, 0.5);
$box-max-width: 30%;
$box-min-width: 200px;
$title-font-size: 16px;
$description-font-size: $title-font-size - 2;

gx-loading {
  /**
   * @prop --rotate-animation-container-size:
   * Define the size of the rotate animation container.
   * (48px by default)
  */
  --rotate-animation-container-size: 48px;

  /**
   * @prop --rotate-animation-duration:
   * Define the duration of the rotate animation container.
   * (1.5s by default)
  */
  --rotate-animation-duration: 1.5s;

  /**
   * @prop --rotate-animation-circle-1-color:
   * Define the color of the first child of the rotate animation container.
   * (rgb(71, 109, 255) by default)
  */
  --rotate-animation-circle-1-color: rgb(71, 109, 255);

  /**
   * @prop --rotate-animation-circle-2-color:
   * Define the color of the second child of the rotate animation container.
   * (rgb(0, 0, 0) by default)
  */
  --rotate-animation-circle-2-color: rgb(0, 0, 0);

  /**
   * @prop --rotate-animation-circle-3-color:
   * Define the color of the third child of the rotate animation container.
   * (rgb(200, 10, 70) by default)
  */
  --rotate-animation-circle-3-color: rgb(200, 10, 70);

  @include visibility(block);
  z-index: $base-z-index;

  // Style applied when the gx-loading is displayed as a dialog
  &[dialog],
  &[dialog="true"] {
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;

    .box {
      position: fixed;
      left: 50%;
      top: 50%;
      background-color: $box-background-color;
      border-radius: 4px;
      box-shadow: 0px 8px 16px 4px $box-shadow-color;
      max-width: $box-max-width;
      min-width: $box-min-width;
      padding: $box-padding;
      overflow: hidden;
      transform: translate(-50%, -50%);
      z-index: $base-z-index + 1;
    }
  }

  .gx-lottie-test {
    display: none !important;
  }

  .box {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;

    @include rotate-animation-styling;
  }

  .title {
    font-size: $title-font-size;
    font-weight: bold;
    text-align: center;
  }

  .description {
    padding-top: 5px;
    font-size: $description-font-size;
    text-align: center;
  }

  .loader {
    height: 4px;
    width: 100%;
    position: absolute;
    top: 0;
    left: 0;
    overflow: hidden;

    .loader-inner {
      display: block;
      position: absolute;
      width: 0;
      height: 4px;
      background-color: #2980b9;
    }

    &.determinate {
      .loader-inner {
        transition: width linear $transition-delay;
      }
    }

    &.indeterminate {
      .loader-inner {
        animation: gx-loading-animation $animation-duration linear infinite;
      }
    }
  }
}

@keyframes gx-loading-animation {
  0% {
    left: -100%;
    width: 30%;
  }

  50% {
    width: 30%;
  }

  70% {
    width: 70%;
  }

  80% {
    left: 50%;
  }

  95% {
    left: 120%;
  }

  100% {
    left: 100%;
    width: 70%;
  }
}

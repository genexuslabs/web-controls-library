@import "../common/_base";
@import "../common/_common-styling-config";

// Used to horizontally and vertically align the text
@mixin alignment($text-align: null, $align-items: null) {
  gx-textblock {
    & > .content.text-content {
      @if ($text-align != null) {
        text-align: $text-align;
      }

      & > .readonly-content-container {
        @if ($align-items != null) {
          align-items: $align-items;
        }
      }
    }
  }
}

// Default alignment which supports RTL
@include alignment(start, flex-start);

// Used when autoGrow = false and format = HTML
gx-table-cell[min-height][max-height] {
  gx-textblock {
    & > .content.html-content {
      .html-container {
        .inner-content {
          position: absolute;
        }
      }
    }
  }
}

gx-textblock {
  @include visibility(inline-flex);
  flex: 1;
  height: 100%;
  --elevation: 0;

  &[disabled]:not([disabled="false"]) {
    pointer-events: none;
  }

  & > .content {
    display: flex;
    flex: 1;
    transition: background-color $transition-delay, color $transition-delay,
      border-color $transition-delay;

    & > .readonly-content-container {
      display: flex;
      flex: 1;
      position: relative;
      overflow: hidden;

      & > .text-container {
        @include elevation();
        position: absolute;
        width: 100%;

        // Used when autoGrow = true
        &.relative {
          position: relative;
        }
      }
    }

    // Used when format = HTML
    &.html-content {
      text-align: start;

      .html-container {
        display: flex;
        flex: 1;
        position: relative;
        height: 100%;
        overflow: hidden;

        .inner-content {
          position: relative;
          width: 100%;
        }
      }
    }
  }
}

// Alignments based on parent control alignment
[align="center"] {
  @include alignment(center);
}

[align="right"] {
  @include alignment(end);
}

[valign="middle"] {
  @include alignment($align-items: center);
}

[valign="bottom"] {
  @include alignment($align-items: flex-end);
}

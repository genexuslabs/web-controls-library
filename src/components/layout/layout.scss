@import "../common/layout-styling-config";

// Only applies to scrolls in the Shadow Root
@include scrollbar-customization();

:host {
  /**
   * @prop --gx-layout-vertical-target-width: Width for vertical targets (left and right)
   */
  --gx-layout-vertical-target-width: auto;

  /**
   * @prop --gx-layout-horizontal-target-height: Height for horizontal targets (top and bottom)
   */
  --gx-layout-horizontal-target-height: auto;

  /**
   * @prop --gx-layout-mask-background-color: Mask background color
   */
  --gx-layout-mask-background-color: #333;

  /**
   * @prop --gx-layout-mask-opacity: Mask opacity
   */
  --gx-layout-mask-opacity: 0.749; // Same as Android

  /**
   * @prop --gx-layout-target-transition-duration: Vertical target's transition duration
   */
  --gx-layout-target-transition-duration: 0.25s;

  /**
   * @prop --gx-layout-target-transition-timing-function: Vertical target's transition timing function
   */
  --gx-layout-target-transition-timing-function: ease-in-out;

  // Determine the size that the top navbar takes
  --gx-navbar-size--top: 0px;

  // Determine the size that the bottom navbar takes
  --gx-navbar-size--bottom: 0px;

  display: grid;
  position: relative;
  flex: 1;
  width: 100%;
  height: 100%;
  margin: 0 auto;

  grid-template-areas: "cell-top cell-top cell-top" "cell-left cell-center cell-right" "cell-bottom cell-bottom cell-bottom";
  grid-template-columns:
    var(--gx-layout-vertical-target-width)
    1fr
    var(--gx-layout-vertical-target-width);
  grid-template-rows:
    var(--gx-layout-horizontal-target-height)
    1fr
    var(--gx-layout-horizontal-target-height);
  grid-column-gap: 0;
  grid-row-gap: 0;
}

.target {
  display: flex;
  justify-content: stretch;
  align-items: stretch;
  flex-direction: column;

  &[hidden] {
    display: none !important;
  }
}

.top {
  grid-area: cell-top;
  flex-direction: row;
  z-index: $z-index-gx-layout;
}

.bottom {
  grid-area: cell-bottom;
  flex-direction: row;
  z-index: $z-index-gx-layout;
}

.left {
  --gx-vertical-hidden-position-X: -100%;
  grid-area: cell-left;
}

.right {
  --gx-vertical-hidden-position-X: 100%;
  grid-area: cell-right;
  inset-inline-end: 0;
}

.center {
  grid-area: cell-center;
  position: relative;
}

// The mask is only active when the layout size is not "large"
.mask {
  display: block;
  position: fixed;
  inset: 0;
  background-color: var(--gx-layout-mask-background-color);
  opacity: 0;
  z-index: $z-index-gx-layout-mask;

  animation: mask-fade-in var(--gx-layout-target-transition-duration)
    var(--gx-layout-target-transition-timing-function) forwards;
}

// - - - - - - - - - - - - - - - - - - - -
//            Vertical targets
// - - - - - - - - - - - - - - - - - - - -
.vertical {
  display: flex;
  position: sticky;

  // The top is updated with the space occupied by the top navbar
  top: var(--gx-navbar-size--top);

  width: $gx-vertical-target-width;
  height: 100%;

  // The height is limited with the space occupied by both navbars
  max-height: calc(
    var(--vh, 100vh) - var(--gx-navbar-size--top) -
      var(--gx-navbar-size--bottom)
  );

  // Each vertical target implements its own scrollable content
  overflow: auto;
}

// In this breakpoint, the vertical target no longer takes up any space in
// the layout
.not-large-layout-size {
  position: fixed;
  transition: transform var(--gx-layout-target-transition-duration)
    var(--gx-layout-target-transition-timing-function);

  z-index: $z-index-gx-layout-vertical;

  &[hidden] {
    display: flex !important;
    transform: translateX(var(--gx-vertical-hidden-position-X));
  }
}

// Vertical targets will be above the top navbar when Header Row Pattern
// is enabled
:host(.gx-navbar-top--visible-HRP) .not-large-layout-size {
  z-index: $z-index-gx-layout-vertical-header-row-pattern;
}

// - - - - - - - - - - - - - - - - - - - -
//          Vertical targets size
// - - - - - - - - - - - - - - - - - - - -
// If the TOP navbar is visible and Header Row Pattern is not enabled, the
// navbar will always take space in the screen
:host(.gx-navbar-top--visible-no-HRP) > .vertical {
  --gx-navbar-size--top: #{$gx-navbar-main-height};
}

// When the BOTTOM navbar is visible it will will always take space in the
// screen
:host(.gx-navbar-bottom--visible) > .vertical {
  --gx-navbar-size--bottom: #{$gx-navbar-main-height};
}

// - - - - - - - - - - - - - - - - - - - -
//               Key frames
// - - - - - - - - - - - - - - - - - - - -
@keyframes mask-fade-in {
  to {
    opacity: var(--gx-layout-mask-opacity);
  }
}

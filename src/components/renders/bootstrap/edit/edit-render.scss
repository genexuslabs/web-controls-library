@import "../../../common/_common-styling-config";

// Used when autoGrow = false and format = HTML
gx-table-cell[min-height][max-height] {
  gx-edit {
    .gx-edit-container {
      .html-container {
        [data-native-element] {
          position: absolute;
        }
      }
    }
  }
}

gx-edit {
  $buttonMinWidth: 2.5rem;
  $buttonMaxWidth: 25%;
  $defaultPlaceholderTextColor: #757575c0;
  $trigger-button-font-color: var(--action-tint-color, black);

  overflow: hidden;
  transition-property: background-color, border-color, box-shadow, color, filter,
    opacity;
  transition-duration: $transition-delay;

  // Used to disable the borders
  @mixin no-borders {
    border: none;
    outline: 0;
  }

  // Used to change the placeholder color in the input controls
  // Opacity property is necessary, because some browsers (e.g., mozilla) change this value
  @mixin placeholder-color {
    color: var(--placeholder-text-color, $defaultPlaceholderTextColor);
    opacity: 1;
  }

  // Used to not display the "trigger-content" when show-trigger=false
  &:not([show-trigger]),
  &[show-trigger="false"] {
    [slot="trigger-content"] {
      display: none;
    }
  }

  // Disable styling for the gx-edit
  &.disabled {
    @include disabled-style();
    pointer-events: none;
  }

  // This applies when the gx-edit is not readonly
  .gx-edit-container {
    display: flex;
    flex: 1;
    overflow: hidden;

    &:not(.HTML-content) {
      padding: 0;
    }

    /*  Used when the gx-edit has type="datetime-local" | "date" | "time"
        and its value is null
    */
    &.null-date {
      // When the gx-edit is not focused, we hide the input
      &:not(:focus-within) {
        input[data-native-element] {
          opacity: 0;
        }
      }

      // When the gx-edit is focused, we hide the placeholder
      &:focus-within {
        .date-placeholder-container {
          opacity: 0;
        }
      }
    }

    // This applies when the gx-edit is also multiline or when format = Text
    textarea,
    input[data-native-element] {
      @include no-borders;
      flex: 1;
      width: 100%;
      background-color: unset;
      transition: opacity $transition-delay;

      &::placeholder {
        @include placeholder-color;
      }
    }

    // Implements a non-native placeholder for date types
    .date-placeholder-container[data-readonly] {
      position: absolute;
      flex: 1;
      pointer-events: none;
      transition: opacity $transition-delay;

      span {
        @include placeholder-color;
      }
    }

    // Used when format = HTML
    .html-container {
      display: flex;
      flex: 1;
      position: relative;
      height: 100%;
      overflow: hidden;

      [data-native-element] {
        position: relative;
        width: 100%;
        text-align: start;
      }
    }

    .trigger-button-container {
      min-width: $buttonMinWidth;
      max-width: $buttonMaxWidth;
      height: 100%;
      overflow: hidden;

      .trigger-button {
        @include no-borders;
        display: flex;
        justify-content: center;
        align-items: center;
        flex: 1;
        width: 100%;
        height: 100%;
        opacity: 0.8;
        background-color: #ddd;
        color: $trigger-button-font-color;
        transition: filter $transition-delay;

        &:hover {
          filter: brightness(90%);
        }

        &:active {
          filter: brightness(80%);
        }

        & > [slot="trigger-content"] {
          pointer-events: none;
          height: 1.34em;
        }
      }
    }
  }

  // This applies when the gx-edit is readonly
  & > [data-readonly] {
    display: flex;
    flex: 1;
    position: relative;
    white-space: break-spaces;
    overflow: hidden;

    .readonly-content-container {
      display: flex;
      align-items: inherit;
      flex: 1;
      position: relative;
      height: 100%;

      .readonly-content {
        position: absolute;
        width: 100%;
        margin: 0;

        // Used when autoGrow = true
        &.relative {
          position: relative;
        }
      }
    }
  }

  // Used to inherit the font properties defined in the GeneXus theme
  h1,
  h2,
  footer {
    font-size: inherit;
    font-weight: inherit;
  }
}

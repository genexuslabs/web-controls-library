////
/// @group theming-mixins
////

$gridContentSelector: "& > *[slot='grid-content']:not(virtual-scroller) >, & > * > .scrollable-content >";

/// Helper mixin to ease styling gx-grid-base custom elements
/// @param {string} $class Base class of the component
/// @param {string} $highlighted Class to be used when the grid is active
/// @param {string} $odd-row Class for styling the Odd row
/// @param {string} $even-row Class for styling the Odd even
/// @param {string} loading-animation Class for styling the grid loading animation
/// @param {string} group-separator Class for styling the grid group-separator
/// @param {string} $horizontal-line Class of the horizontal line separator (to be implemented)
@mixin gx-grid-base(
  $class,
  $highlighted: null,
  $odd-row: null,
  $even-row: null,
  $loading-animation: null,
  $group-separator: null,
  $horizontal-line: null
) {
  @extend #{$class};

  @if ($highlighted != null) {
    &.gx-highlighted {
      @extend #{$highlighted} !optional;
    }
  }

  #{$gridContentSelector} {
    @if ($odd-row != null) {
      .gx-grid-row:not(gx-grid-smart-cell):nth-child(odd),
      * > .gx-grid-row:nth-child(odd),
      .gx-grid-row:not([is-row-even]),
      * > .gx-grid-row:not([is-row-even]) {
        @extend #{$odd-row} !optional;
      }
    }

    @if ($even-row != null) {
      .gx-grid-row:not(gx-grid-smart-cell):nth-child(even),
      * > .gx-grid-row:nth-child(even),
      .gx-grid-row[is-row-even],
      * > .gx-grid-row[is-row-even] {
        @extend #{$even-row} !optional;
      }
    }

    @if ($horizontal-line != null) {
      /// CSS Grid Smart. row-gap css property does not support color.
      gx-grid-smart-cell {
        & > *::after {
          --grid--horizontal-line-separator-default: block;
          @extend #{$horizontal-line} !optional;
          content: "";
          height: var(--grid--horizontal-line-size, 1px);
          display: var(
            --grid--horizontal-line-separator,
            --grid--horizontal-line-separator-default
          );
          position: absolute;
          bottom: 0;
          left: 0;
          right: 0;
        }
      }
    }

    @if ($group-separator != null) {
      .gx-group-separator {
        @extend #{$group-separator} !optional;
      }
    }
  }
}

/// Helper mixin to ease styling gx-grid-base's custom elements rows
/// @param {string} $class Base class of the component
/// @param {string} $highlighted Class to be used when the grid row is active
@mixin gx-grid-base-row($class, $highlighted: null) {
  @extend #{$class};

  @if ($highlighted != null) {
    &.gx-highlighted,
    &[data-gx-grid-highlighted] {
      @extend #{$highlighted} !optional;
    }
  }
}

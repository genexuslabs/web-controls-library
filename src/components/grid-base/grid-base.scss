@import "../common/_base";
@import "../common/common-styling-config";

$grid-content-selector: "& > [slot='grid-content']:not(virtual-scroller), & > * > .scrollable-content";

.gx-grid-base {
  flex: 1;
  align-self: stretch;

  @include transition-properties();

  // All grids will hide their content overflow
  overflow: hidden; // Required for gx-loading's positioning

  #{$grid-content-selector} {
    flex: 1;
  }

  & > pinch-zoom > .grid-empty-placeholder, // Used by gx-grid-image-map
  & > .grid-empty-placeholder {
    @include visibility(none);
  }

  & > pinch-zoom > .grid-empty-placeholder > [slot="grid-content-empty"], // Used by gx-grid-image-map
  & > .grid-empty-placeholder > [slot="grid-content-empty"] {
    flex: 1;
    align-self: stretch;
  }
}

// Show the empty placeholder if the grid was loaded with no items
.gx-grid-base.gx-grid-empty:not(.gx-grid-loading) > pinch-zoom, // Used by gx-grid-image-map
.gx-grid-base.gx-grid-empty:not(.gx-grid-loading) {
  & > :first-child {
    @include visibility(none);
  }

  .grid-empty-placeholder {
    @include visibility(flex);
    flex: 1;
    height: 100%;
  }
}

.gx-grid-base.gx-grid-empty {
  #{$grid-content-selector},
  .gx-grid-paging {
    @include visibility(none);
  }
}

// The grid is loading, hide its content
.gx-grid-base.gx-grid-empty-loading > pinch-zoom > .gx-image-map-container, // Used by gx-grid-image-map
.gx-grid-base.gx-grid-empty-loading {
  // WA to not hide gx-loading on gx-grid-image-map load. This is needed since,
  // the gx-loading is inside the pinch-zoom element, but it should be outside
  & > :not(pinch-zoom):first-child {
    @include visibility(none);
  }
}

// If the grid loaded, hide the loader (slot="grid-empty-loading-placeholder")
.gx-grid-base:not(.gx-grid-empty-loading) > pinch-zoom > gx-loading, // Used by gx-grid-image-map
.gx-grid-base:not(.gx-grid-empty-loading) > gx-loading {
  display: none;
}

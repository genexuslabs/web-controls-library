@import "../common/base";
@import "../common/common-styling-config";

/**
 * @prop $rating-selected-color:
 * Set the color that will have the stars.
*/
$rating-selected-color: #e4ac13;

/**
 * @prop $rating-unselected-color:
 * Set the color of unselected stars.
*/
$rating-unselected-color: rgba(80, 80, 80, 0.4);

@include visibility-shadow-DOM(flex);

:host(.disabled) {
  pointer-events: none;
}

:host {
  /**
   * @prop --star-width:
   * Set the width of each star.
  */
  --star-width: 2em;

  /**
   * @prop --star-heigth:
   * Set the heigth of each star.
  */
  --star-heigth: auto;

  /**
   * @prop --star-separation:
   * This is for set the space between each star
  */
  --star-separation: 2px;

  @include transition-properties();
  flex: 1;
  align-self: stretch;
}

.stars-container {
  display: flex;
  flex-wrap: wrap;

  &:hover {
    & > .rating-star-container {
      & > .rating-star {
        fill: var(--rating-selected-color, $rating-selected-color);
      }

      &:hover ~ svg {
        & > .rating-star {
          fill: var(--rating-unselected-color, $rating-unselected-color);
        }
      }
    }
  }
}

.rating-star-container {
  width: var(--star-width);
  height: var(--star-heigth);
  padding: 0px var(--star-separation);
  cursor: pointer;

  & > .rating-star {
    width: var(--star-width);
    height: var(--star-heigth);
    fill: var(--rating-unselected-color, $rating-unselected-color);

    // Only the svg container (.rating-star) should trigger click event
    pointer-events: none;
    transition: fill 200ms linear;

    &.selected-star {
      fill: var(--rating-selected-color, $rating-selected-color);
      filter: drop-shadow(
        0 0 2px var(--rating-selected-color, $rating-selected-color)
      );
    }
  }
}
